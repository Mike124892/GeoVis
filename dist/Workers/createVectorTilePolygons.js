/*! For license information please see createVectorTilePolygons.js.LICENSE.txt */
import{a as R}from"./chunk-7RE2NPD7.js";import{a as It}from"./chunk-BHWELPB4.js";import{a as M}from"./chunk-GAH7IJVU.js";import{a as bt}from"./chunk-PT6JDBLV.js";import"./chunk-4CSLOU34.js";import"./chunk-YGZTDFCH.js";import"./chunk-4ZLSWVFU.js";import"./chunk-B3LBD7CG.js";import{a as W}from"./chunk-YNTFMT6T.js";import"./chunk-2Z7LHEFB.js";import{h as z}from"./chunk-URXUHQWZ.js";import"./chunk-2ZKHVIZO.js";import{a as o,b as nt,d as j}from"./chunk-H26ARMDM.js";import{a as et}from"./chunk-KROATL7C.js";import"./chunk-6A4YVUYV.js";import"./chunk-IPTRD2UF.js";import"./chunk-WF3Q7FOG.js";import"./chunk-NERDVOKQ.js";import{e as A}from"./chunk-4ACNSQDC.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let t=0;t<r;++t)M.pack(e[t],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let t=0;t<s;++t){let e=n[t];R.pack(e.color,a,i),i+=R.packedLength,a[i++]=e.offset,a[i++]=e.count;let r=e.batchIds,o=r.length;a[i++]=o;for(let t=0;t<o;++t)a[i++]=r[t]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let g,w,I,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let L=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,L,3*g)}let T=a.length,j=new Array(T),x=new Array(T),U=0,F=0;for(g=0;g<T;++g)j[g]=U,x[g]=F,U+=a[g],F+=i[g];let B=new Float32Array(3*b*2),O=new Uint16Array(2*b),S=new Uint32Array(x.length),P=new Uint32Array(i.length),C=[],D={};for(g=0;g<T;++g)I=f[g],A(D[I])?(D[I].positionLength+=a[g],D[I].indexLength+=i[g],D[I].batchIds.push(g)):D[I]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let H,V=0,G=0;for(I in D)if(D.hasOwnProperty(I)){H=D[I],H.offset=V,H.indexOffset=G;let t=2*H.positionLength,e=2*H.indexLength+6*H.positionLength;V+=t,G+=e,H.indexLength=e}let Y=[];for(I in D)D.hasOwnProperty(I)&&(H=D[I],Y.push({color:R.fromRgba(parseInt(I)),offset:H.indexOffset,count:H.indexLength,batchIds:H.batchIds}));for(g=0;g<T;++g){I=f[g],H=D[I];let t=H.offset,e=3*t,r=t,b=j[g],y=a[g],N=s[g],E=m,T=p;A(d)&&A(k)&&(E=d[g],T=k[g]);let U=Number.POSITIVE_INFINITY,F=Number.NEGATIVE_INFINITY,R=Number.POSITIVE_INFINITY,V=Number.NEGATIVE_INFINITY;for(w=0;w<y;++w){let t=o.unpack(L,3*b+3*w,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;U=Math.min(a,U),F=Math.max(a,F),R=Math.min(i,R),V=Math.max(i,V);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,T,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,B,e),o.pack(c,B,e+3),O[r]=N,O[r+1]=N,e+=6,r+=2}u=Mt,u.west=R,u.east=V,u.south=U,u.north=F,c[g]=M.fromRectangle(u,m,p,l);let G=H.indexOffset,Y=x[g],W=i[g];for(S[g]=G,w=0;w<W;w+=3){let e=n[Y+w]-b,r=n[Y+w+1]-b,o=n[Y+w+2]-b;C[G++]=2*e+t,C[G++]=2*r+t,C[G++]=2*o+t,C[G++]=2*o+1+t,C[G++]=2*r+1+t,C[G++]=2*e+1+t}for(w=0;w<y;++w){let e=w,n=(w+1)%y;C[G++]=2*e+1+t,C[G++]=2*n+t,C[G++]=2*e+t,C[G++]=2*e+1+t,C[G++]=2*n+1+t,C[G++]=2*n+t}H.offset+=2*y,H.indexOffset=G,P[g]=G-S[g]}C=W.createTypedArray(B.length/3,C);let _=Y.length;for(let t=0;t<_;++t){let e=Y[t].batchIds,n=0,r=e.length;for(let t=0;t<r;++t)n+=P[e[t]];Y[t].count=n}let Z=Ct(2===C.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,c,Y);return e.push(B.buffer,C.buffer,S.buffer,P.buffer,O.buffer,Z.buffer),{positions:B.buffer,indices:C.buffer,indexOffsets:S.buffer,indexCounts:P.buffer,batchIds:O.buffer,packedBuffer:Z.buffer}}var Jt=It(Rt);export{Jt as default};